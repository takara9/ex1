name: Branch を Push したらイメージをビルドする

on:
  push:
    branches:
      - '*'         # matches every branch that doesn't contain a '/'
      - '*/*'       # matches every branch containing a single '/'
      - '**'        # matches every branch
      - '!main'     # excludes main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-test-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      #- name: Set up QEMU
      #  uses: docker/setup-qemu-action@v3
      #- name: Set up Docker Buildx
      #  uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      #- name: Extract metadata (tags, labels) for Docker
      #  id: meta
      #  uses: docker/metadata-action@v5
      #  with:
      #    images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build a image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          #tags: ${{ steps.meta.outputs.tags }}
          tags: ex1:test
          #platforms: linux/amd64,linux/arm64
          #labels: ${{ steps.meta.outputs.labels }}
          labels: test

      - name: Start a container from the image
        run: |
          docker images
          # docker run -d --name test -p 9100:9100 ${{ steps.meta.outputs.tags }}
          docker compose up -d
          docker compose ps

      - name: Test the container
        run: |
          sleep 10
          docker compose ps -a
          curl --silent --retry 3 --include  http://127.0.0.1:9100/ping | grep "200 OK" 
          [ $? -ne 0 ] && (echo "error"; exit 1)
          curl --silent --retry 3 --include  http://127.0.0.1:9100/info | grep "200 OK" 
          [ $? -ne 0 ] && (echo "error"; exit 1)
          curl --silent --retry 3 --include  http://127.0.0.1:9100/healthz | grep "500 INTERNAL SERVER ERROR" 
          [ $? -ne 0 ] && (echo "error"; exit 1)
          curl --silent --retry 3 --include  http://127.0.0.1:9100/readiness | grep "200 OK" 
          [ $? -ne 0 ] && (echo "error"; exit 1)

          exit 0

